---
import MainLayout from "../../layouts/MainLayout.astro";
import { getProductoById, getAllProductos } from "../../services/prendas";
import { type Producto } from "../../types/producto";

interface Props {
  id: string;
  img: string;
  nombre: string;
  precio: string;
  descripcion: string;
  marca: string;
  genero: string;
  cantidad : number;
}

const { id } = Astro?.params;

export const prerender = true;

const producto: any = id ? await getProductoById({ id }) : "null";

export async function getStaticPaths() {
  const productos: Producto[] = await getAllProductos();
  return productos.map((producto) => ({
    params: { id: producto.id_producto },
  }));
}
---

<MainLayout title={`${producto.nombre}`}>
  <a
    href="/prendas"
    class="inline-flex px-4 py-2 mt-8 gap-2 text-sm font-medium text-center text-black ring-2 rounded-lg focus:ring-4 focus:ring-blue-400 dark:text-white dark:focus:ring-blue-200"
  >
    <svg
      width="20"
      height="20"
      viewBox="0 0 28 28"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        stroke="currentColor"
        stroke-linecap="round"
        stroke-linejoin="round"
        stroke-width="2"
        fill="currentColor"
        d="M24.9375 14C24.9375 14.3481 24.7992 14.6819 24.5531 14.9281C24.3069 15.1742 23.9731 15.3125 23.625 15.3125H7.54687L13.1819 20.9464C13.4284 21.193 13.567 21.5274 13.567 21.8761C13.567 22.2248 13.4284 22.5592 13.1819 22.8058C12.9353 23.0523 12.6009 23.1909 12.2522 23.1909C11.9035 23.1909 11.5691 23.0523 11.3225 22.8058L3.4475 14.9308C3.32514 14.8088 3.22805 14.6639 3.16181 14.5044C3.09556 14.3449 3.06146 14.1738 3.06146 14.0011C3.06146 13.8283 3.09556 13.6573 3.16181 13.4978C3.22805 13.3382 3.32514 13.1933 3.4475 13.0714L11.3225 5.1964C11.4446 5.07431 11.5895 4.97746 11.749 4.91139C11.9086 4.84532 12.0795 4.81131 12.2522 4.81131C12.4248 4.81131 12.5958 4.84532 12.7553 4.91139C12.9148 4.97746 13.0598 5.07431 13.1819 5.1964C13.304 5.31849 13.4008 5.46343 13.4669 5.62294C13.533 5.78246 13.567 5.95343 13.567 6.12609C13.567 6.29875 13.533 6.46971 13.4669 6.62923C13.4008 6.78875 13.304 6.93369 13.1819 7.05577L7.54687 12.6875H23.625C23.9731 12.6875 24.3069 12.8258 24.5531 13.0719C24.7992 13.3181 24.9375 13.6519 24.9375 14Z"
      ></path>
    </svg>
    Volver
  </a>

  <section class="w-95 max-w-120rem mx-auto pt-4 sm:pt-14 pb-24 sm:pb-4">
    <div class="grid grid-cols-1 md:grid-cols-2 gap-7">
      <div class="flex justify-center">
        <picture
          class="w-full h-full overflow-hidden rounded-md bg-gray-200 max-w-sm max-h-sm"
        >
          <img
            id="image-product"
            src={producto.img}
            alt={`${producto.nombre} - ${producto.marca}`}
            class="w-full h-full object-cover object-center"
          />
        </picture>
      </div>
      <span id="idVal" class="hidden">{producto.id}</span>
      <div class="flex flex-col justify-center mx-auto max-w-md">
        <h2 id="name-product" class="text-2xl font-bold mb-4">
          {producto.nombre}
        </h2>
        <p class="text-lg text-gray-600 dark:text-gray-300 mb-2">
          Marca: <span>{producto.marca}</span>
        </p>
        <p class="text-lg text-gray-600 dark:text-gray-300 mb-2">
          Género: <span>{producto.genero}</span>
        </p>
        <p class="text-lg text-gray-600 dark:text-gray-300 mb-2">
          Cantidad disponible: <span>{producto.cantidad}</span>
        </p>
        <p class="text-lg text-red-500 font-bold mb-4">
          Precio: S/. <span id="price-product">{producto.precio}</span>
        </p>
        <p class="text-base text-gray-600 dark:text-gray-300 leading-snug mb-6">
          {
            producto.descripcion != ""
              ? producto.descripcion
              : "No hay descripción adicional disponible"
          }
        </p>
        <div class="flex gap-4">
          <button
            id="addToPaymentConfirm"
            class="bg-red-500 text-white py-3 px-6 rounded-md"
          >
            Comprar producto
          </button>
          <button
            id="addToCart"
            class="bg-green-500 text-white py-3 px-6 rounded-md"
          >
            Agregar al carrito
          </button>
        </div>
      </div>
    </div>
  </section>

  <script>
    document.addEventListener("DOMContentLoaded", () => {
      const addToCartButton = document.getElementById("addToCart");
      const addToPaymentConfirmButton = document.getElementById(
        "addToPaymentConfirm"
      );

      let idVal = document.getElementById("idVal").textContent; // Aqui quiero llamar el valor del id
      let nameProduct = document.getElementById("name-product").textContent;
      let priceProduct = parseFloat(
        document.getElementById("price-product").textContent
      );
      let imageProduct = document.getElementById("image-product");
      let imgSrc = imageProduct.src;
      let idConcat = `${nameProduct} ${idVal}`;

      const product = {
        id: idConcat,
        name: nameProduct,
        price: priceProduct,
        image: imgSrc,
        quantity: 1,
      };

      addToCartButton.addEventListener("click", () => {
        console.log("Botón presionado");

        // Obtener el carrito actual del localStorage
        let cart = JSON.parse(localStorage.getItem("cart")) || [];

        // Verificar si el producto ya está en el carrito
        const existingProductIndex = cart.findIndex(
          (item: any) => item.id === product.id
        );

        if (existingProductIndex >= 0) {
          // Si el producto ya está en el carrito, incrementar la cantidad
          cart[existingProductIndex].quantity += 1;
        } else {
          // Si el producto no está en el carrito, agregarlo
          cart.push(product);
        }

        // Guardar el carrito actualizado en el localStorage
        localStorage.setItem("cart", JSON.stringify(cart));

        // Redirigir a la página de la cesta
        window.location.href = "./../cesta";
      });

      addToPaymentConfirmButton.addEventListener("click", () => {
        const selectedProducts = [];

        selectedProducts.push(product);

        localStorage.setItem(
          "selectedProducts",
          JSON.stringify(selectedProducts)
        );

        // Redirigir a la página de la confirmar compra
        window.location.href = "./../compras";
      });
    });
  </script>
</MainLayout>
