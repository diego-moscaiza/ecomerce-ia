---
import axios from "axios";
import Layout from "../layouts/MainLayout.astro";

if (Astro.request.method === "POST") {
  try {
    const formData = await Astro.request.formData();
    const nombre = formData.get("first_name");
    const apellido = formData.get("last_name");
    const correo = formData.get("email");
    const usuario = formData.get("username");
    const password = formData.get("password");
    const apiUrl = "https://ecomerce-ia.onrender.com/api/cuentas/register/";

    const response = await fetch(apiUrl, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        first_name: nombre,
        last_name: apellido,
        email: correo,
        username: usuario,
        password: password,
      }),
    });

    const responseData = await response.json();

    if (response.ok) {
      console.log(`Se ha registrado exitosamente.`);
      // Redirigir a otra página
      return Astro.redirect("/iniciar-sesion");
    } else {
      console.error("NO Error al crea cuenta:", response.statusText);
      console.log(response);
    }
  } catch (error) {
    if (error instanceof Error) {
      console.error("MAL Error al crea cuenta:", error.message);
    }
  }
}
---

<Layout title="Registrarse">
  <div class="justify-center min-h-[calc(100vh-4rem)] pt-16 lg:pt-20 xl:pt-28">
    <div
      class="shadow-lg rounded-lg bg-gray-50 dark:bg-gray-800 max-w-2xl mx-auto p-4 lg:p-6 md:p-5 sm:p-4"
    >
      <h1 class="text-3xl font-bold mb-8 text-center">Crea tu cuenta</h1>
      <div class="flex flex-col">
        <form method="post">
          <fieldset class="mb-4 grid grid-cols-1 md:grid-cols-2 md:gap-4">
            <div class="mb-4 md:mb-0">
              <label
                for="first_name"
                class="block text-black dark:text-gray-300 mb-2"
                >Nombres
                <span class="text-red-500 font-bold">*</span>
              </label>
              <input
                type="text"
                id="first_name"
                name="first_name"
                required
                placeholder="Ingrese sus nombres"
                oninput="if(this.value.length >= 40) this.value = this.value.slice(0, 40);"
                class="w-full border text-black dark:text-black border-gray-300 rounded-md py-2 px-3 focus:outline-none focus:border-blue-500"
              />
            </div>
            <div class="mb-4">
              <label
                for="last_name"
                class="block text-black dark:text-gray-300 mb-2"
                >Apellidos
                <span class="text-red-500 font-bold">*</span>
              </label>
              <input
                type="text"
                id="last_name"
                name="last_name"
                required
                placeholder="Ingrese sus apellidos"
                oninput="if(this.value.length >= 60) this.value = this.value.slice(0, 60);"
                class="w-full border text-black dark:text-black border-gray-300 rounded-md py-2 px-3 focus:outline-none focus:border-blue-500"
              />
            </div>
          </fieldset>
          <fieldset class="mb-4 grid grid-cols-1 md:grid-cols-2 md:gap-4">
            <div class="mb-4 md:mb-0">
              <label
                for="username"
                class="block text-black dark:text-gray-300 mb-2"
                >Usuario
                <span class="text-red-500 font-bold">*</span>
              </label>
              <input
                type="text"
                id="username"
                name="username"
                required
                placeholder="Ingrese tu nombre de usuario"
                oninput="if(this.value.length >= 15) this.value = this.value.slice(0, 15);"
                class="w-full border text-black dark:text-black border-gray-300 rounded-md py-2 px-3 focus:outline-none focus:border-blue-500"
              />
            </div>
            <div class="mb-4">
              <label
                for="email"
                class="block text-black dark:text-gray-300 mb-2"
                >Correo electrónico
                <span class="text-red-500 font-bold">*</span>
              </label>
              <input
                type="email"
                id="email"
                name="email"
                required
                placeholder="Ingrese su correo"
                oninput="if(this.value.length >= 30) this.value = this.value.slice(0, 30);"
                class="w-full border text-black dark:text-black border-gray-300 rounded-md py-2 px-3 focus:outline-none focus:border-blue-500"
              />
            </div>
          </fieldset>

          <fieldset class="mb-4 grid grid-cols-1 md:grid-cols-2 md:gap-4">
            <div class="mb-4 md:mb-0">
              <label
                for="password"
                class="block text-black dark:text-gray-300 mb-2"
                >Contraseña
                <span class="text-red-500 font-bold">*</span>
              </label>
              <input
                type="password"
                id="password"
                name="password"
                required
                placeholder="Ingrese su contraseña"
                class="w-full border text-black dark:text-black border-gray-300 rounded-md py-2 px-3 focus:outline-none focus:border-blue-500"
              />
            </div>
            <div>
              <label
                for="password-2"
                class="block text-black dark:text-gray-300 mb-2"
                >Confirmar contraseña
                <span class="text-red-500 font-bold">*</span>
              </label>
              <input
                type="password"
                id="confirm-password"
                required
                placeholder="Vuelva a ingresar su contraseña"
                class="w-full border text-black dark:text-black border-gray-300 rounded-md py-2 px-3 focus:outline-none focus:border-blue-500"
              />
            </div>
          </fieldset>
          <div class="flex justify-start gap-x-2 mt-4">
            <button
              type="submit"
              id="submit-btn"
              disabled
              class="w-52 h-12 py-2 px-4 shadow-sm rounded-md bg-gray-300 transition-all duration-700 text-gray-600 text-base dark:text-white font-semibold leading-7 cursor-not-allowed opacity-50"
            >
              Crear mi cuenta
            </button>
          </div>
        </form>
        <div class="mt-6 text-blue-500 text-center">
          <a href="/iniciar-sesion" class="hover:underline"
            >Deseo iniciar sesión</a
          >
        </div>
      </div>
    </div>

    <script>
      const inputOnlyText = document.querySelectorAll(
        "#first_name, #last_name"
      );
      const firstNameInput = document.getElementById("first_name");
      const lastNameInput = document.getElementById("last_name");
      const usernameInput = document.getElementById("username");
      const emailInput = document.getElementById("email");
      const passwordInput = document.getElementById("password");
      const confirmPasswordInput = document.getElementById("confirm-password");
      const submitBtn = document.getElementById("submit-btn");

      inputOnlyText.forEach((input) => {
        input.addEventListener("input", (e) => {
          let value = e.target.value;
          // Eliminar cualquier número
          value = value.replace(/[0-9]/g, "");
          e.target.value = value;
        });

        input.addEventListener("keydown", (e) => {
          if (e.key.match(/[0-9]/)) {
            e.preventDefault();
            alert(`No se admiten números en "${e.target.name}s"`);
          }
        });
      });

      // Event listeners para los campos del formulario
      const inputFields = [
        firstNameInput,
        lastNameInput,
        usernameInput,
        emailInput,
        passwordInput,
        confirmPasswordInput,
      ];

      inputFields.forEach((input) => {
        input.addEventListener("input", () => {
          finalStep();
        });
      });

      // Función para validar los campos y habilitar o deshabilitar el botón de envío
      function finalStep() {
        if (
          firstNameInput.value !== "" &&
          lastNameInput.value !== "" &&
          usernameInput.value !== "" &&
          emailInput.value !== "" &&
          passwordInput.value !== "" &&
          confirmPasswordInput.value !== ""
        ) {
          if (passwordInput.value === confirmPasswordInput.value) {
            submitBtn.disabled = false;
            submitBtn.classList.remove(
              "bg-gray-300",
              "cursor-not-allowed",
              "opacity-50"
            );
            submitBtn.classList.add(
              "bg-green-500",
              "hover:bg-green-700",
              "active:bg-green-800",
              "text-white"
            );
          } else {
            submitBtn.disabled = true;
            submitBtn.classList.add(
              "bg-gray-300",
              "cursor-not-allowed",
              "opacity-50"
            );
            submitBtn.classList.remove(
              "bg-green-500",
              "hover:bg-green-700",
              "active:bg-green-800",
              "text-white"
            );
          }
        } else {
          submitBtn.disabled = true;
          submitBtn.classList.add(
            "bg-gray-300",
            "cursor-not-allowed",
            "opacity-50"
          );
          submitBtn.classList.remove(
            "bg-green-500",
            "hover:bg-green-700",
            "active:bg-green-800"
          );
        }
      }

      // Event listeners para los cambios en los campos del formulario
      firstNameInput.addEventListener("input", finalStep);
      lastNameInput.addEventListener("input", finalStep);
      usernameInput.addEventListener("input", finalStep);

      emailInput.addEventListener("input", finalStep);
      passwordInput.addEventListener("input", finalStep);
      confirmPasswordInput.addEventListener("input", finalStep);

      const validateNameField = () => {
        const inputValue = firstNameInput.value.trim();
        if (inputValue.length < 2) {
          alert("El nombre debe ser de 2 caracteres o más.");
          return false;
        }
        return true;
      };

      const validateLastNameField = () => {
        const inputValue = lastNameInput.value.trim();
        if (inputValue.length < 2) {
          alert("El apellido debe ser de 2 caracteres o más.");
          return false;
        }
        return true;
      };

      const validateUsernameField = () => {
        const inputValue = usernameInput.value.trim();
        if (inputValue.length < 3) {
          alert("El usuario debe ser de 3 caracteres o más.");
          return false;
        }
        return true;
      };

      const form = document.querySelector("form");
      form.addEventListener("submit", (e) => {
        e.preventDefault();
        if (
          validateNameField() &&
          validateLastNameField() &&
          validateUsernameField()
        ) {
          form.submit();
        }
      });
    </script>
  </div>
</Layout>
